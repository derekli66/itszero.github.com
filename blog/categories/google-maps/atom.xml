<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Google Maps | [Zero setLogger: self];]]></title>
  <link href="http://itszero.github.com/blog/categories/google-maps/atom.xml" rel="self"/>
  <link href="http://itszero.github.com/"/>
  <updated>2014-03-13T16:54:34-04:00</updated>
  <id>http://itszero.github.com/</id>
  <author>
    <name><![CDATA[Zero Cho]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[MetaWatch meets Google Maps]]></title>
    <link href="http://itszero.github.com/blog/2011/11/18/meta-watch-meets-google-maps/"/>
    <updated>2011-11-18T08:42:00-05:00</updated>
    <id>http://itszero.github.com/blog/2011/11/18/meta-watch-meets-google-maps</id>
    <content type="html"><![CDATA[<p><a href="/images/posts/MetaPlay.jpg" class="fancybox"><img class="right" src="/images/posts/MetaPlay.jpg" width="200" title="MetaPlay" ></a></p>

<p>MetaWatch just shipped out few days ago. Once I got the watch, I starts to play
with it, and to see what it is capable to do. I tried to use the intent-based
API and put together this little experiment. I use the phone to acquire current
location then retrieve Google Maps image for 96x96 display. Before you could
deliver images to the watch, you&rsquo;ll need to convert it to Black &amp; White image.
I used a threshold filter on the luminance channel for this, and the photo
above is the result. Kinda fun, but not really useful. Let&rsquo;s see what can be
done next..</p>

<p>Update: Source code are now available <a href="https://github.com/itszero/MetaLoc">here</a>!</p>
]]></content>
  </entry>
  
</feed>
