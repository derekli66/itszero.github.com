<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: middleman | [Zero setLogger: self];]]></title>
  <link href="http://itszero.github.com/blog/categories/middleman/atom.xml" rel="self"/>
  <link href="http://itszero.github.com/"/>
  <updated>2013-06-04T22:06:34-07:00</updated>
  <id>http://itszero.github.com/</id>
  <author>
    <name><![CDATA[Chien-An "Zero" Cho]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Show last modified date in Middleman]]></title>
    <link href="http://itszero.github.com/blog/2012/03/28/show-last-modified-date-in-middleman/"/>
    <updated>2012-03-28T13:39:00-07:00</updated>
    <id>http://itszero.github.com/blog/2012/03/28/show-last-modified-date-in-middleman</id>
    <content type="html"><![CDATA[<p>It is very convenient to build a static website using middleman along with some
tools like compass, twitter's bootstrap framework. You can easily build a
professional looking website while maintaining high code readability and
maintainability.</p>

<p>When you're designing a website for a conference or event, one thing that you
might want to put in the footer is the &quot;last modified date&quot;. The first way come
in to my mind to do this is very simple. Just put a line to output current date
in ruby code.</p>

<p><code>haml Wrong way to do last modified date
  Some website™
  #{&quot;Last Modified: %s  &quot; % DateTime.now.strftime(&quot;%Y/%m/%d&quot;)}
</code></p>

<p>I was thinking that the middleman will only build changed file. Though this
code will show the last `build time', but it'll act effectively as last
modified time for file. I was wrong. :( If you build the website in different
date, you'll find out hat middleman is smart enough to know that the evaluated
result of ruby code in the layout has changed. It will then rebuild every file
that includes this layout. However, it is very hard to know which file is being
generated in middleman. I tried lots of way and finally find this. When
middleman building a website, it simulates a Sinatra request in the following
format:</p>

<p><code>
http://example.org/your_page.html
</code></p>

<p>In sinatra, you can get the request via `request' object in page. This works in
middleman too. However, it gives you no clue about the real filename since the
engine extension has been stripped in output. Fortunatly, in most condition,
one file is going to use only one engine to build, so just append a * operator
after the path should be just fine. The result code would look like this:</p>

<p><code>haml Right way to do last modified date
  Some website™
  #{&quot;Last Modified: %s  &quot; % File.mtime(Dir.glob(&quot;source/#{request.path}*&quot;)[0]).strftime(&quot;%m/%d/%Y&quot;)}
</code></p>

<p>Voila, now you have it. :) If you have a better way to do this, please share with me!</p>
]]></content>
  </entry>
  
</feed>
