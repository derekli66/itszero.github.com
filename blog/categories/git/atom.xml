<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Git | [Zero setLogger: self];]]></title>
  <link href="http://itszero.github.com/blog/categories/git/atom.xml" rel="self"/>
  <link href="http://itszero.github.com/"/>
  <updated>2013-03-01T11:37:13-05:00</updated>
  <id>http://itszero.github.com/</id>
  <author>
    <name><![CDATA[Chien-An "Zero" Cho]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Git Dashboard]]></title>
    <link href="http://itszero.github.com/blog/2011/11/18/git-dashboard/"/>
    <updated>2011-11-18T08:57:00-05:00</updated>
    <id>http://itszero.github.com/blog/2011/11/18/git-dashboard</id>
    <content type="html"><![CDATA[<p><a href="/images/posts/git-dashboard.png" class="fancybox"><img src="/images/posts/git-dashboard.png"></a></p>

<p>I actually made this dashboard few weeks ago, I'm just too lazy to write this
down. /me <em>flee</em></p>

<p>This dashboard is made for collaboration with teams. I was a hackthon-ing with
<a href="http://o0o.cse.tw">bizkit</a> and <a href="http://www.facebook.com/itsftt">ftt</a>. We set
up the dashboard to pulls new data from the repository automatically and
display in this <em>pretty format</em>. It was only intended for fun but it turns out
very useful when merging works from everyone. The tool we used to make it
display on the desktop is called
<a href="http://mutablecode.com/apps/nerdtool">NerdTool</a>, and it was very easy to
setup. You just need to add a new entry with the following command. We have
another repository put under <code>~/.gitwatch</code> to prevent the work being interfered
when pulling new changes and to eliminate all local branches.</p>

<p><code>bash Command for git dashboard
date; cd /Users/Zero/.gitwatch/fun-taipei-fork-of-csim-saycheese; git pull &gt;/dev/null 2&gt;&amp;1; git lp2 --all | head -n 34
</code></p>

<p>Oh, and for the lp2, it's actually abbrev. of log command with customized
format string. You could add the following entries to your <code>~/.gitconfig</code> file.</p>

<p><code>text Add these to ~/.gitconfig
[alias]
  lp2 = log --abbrev-commit --decorate --graph --color --pretty=&quot;format:%C(yellow)%h%Cred%d\\ %C(cyan)%an%Creset:\\ %Cgreen%s%Creset\\ %ar&quot; --all
</code></p>

<p>Now, have fun! :)</p>
]]></content>
  </entry>
  
</feed>
